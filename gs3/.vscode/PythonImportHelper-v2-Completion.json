[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "JSONParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "api",
        "description": "api",
        "isExtraImport": true,
        "detail": "api",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "api.migrations.0001_initial",
        "description": "api.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Student',\n            fields=[\n                ('id', models.IntegerField(primary_key=True, serialize=False)),\n                ('name', models.CharField(max_length=70)),",
        "detail": "api.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "studentAdmin",
        "kind": 6,
        "importPath": "api.admin",
        "description": "api.admin",
        "peekOfCode": "class studentAdmin(admin.ModelAdmin):\n    list_display = ['id','name','roll','city']",
        "detail": "api.admin",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "api.models",
        "description": "api.models",
        "peekOfCode": "class Student(models.Model):\n    id = models.IntegerField(primary_key=True)\n    name = models.CharField(max_length=70)\n    roll = models.IntegerField()\n    city = models.CharField(max_length=70)",
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "StudentSerializer",
        "kind": 6,
        "importPath": "api.serializers",
        "description": "api.serializers",
        "peekOfCode": "class StudentSerializer(serializers.Serializer):\n    name = serializers.CharField(max_length=70)\n    roll = serializers.IntegerField()\n    city = serializers.CharField(max_length=70)\n    def create(self,validate_data):\n        return Student.objects.create(**validate_data)\n    def update(self,instance,validated_data):\n        print(instance.name)\n        instance.name = validated_data.get('name',instance.name)\n        print(instance.name)",
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "student_api",
        "kind": 2,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "def student_api(request):\n    if request.method == 'GET':\n        # Get 'id' from query parameters\n        id = request.GET.get('id', None)\n        if id is not None:\n            try:\n                # Fetch single student by id\n                stu = Student.objects.get(id=id)\n                serializer = StudentSerializer(stu)\n                json_data = JSONRenderer().render(serializer.data)",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "gs3.asgi",
        "description": "gs3.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "gs3.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$(ip^^gx1%&7&w1p_yq^l-r9q8c+a+50wimi(8ih5odo=vm3d^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-$(ip^^gx1%&7&w1p_yq^l-r9q8c+a+50wimi(8ih5odo=vm3d^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'api'\n]",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'gs3.urls'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "ROOT_URLCONF = 'gs3.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "WSGI_APPLICATION = 'gs3.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "gs3.settings",
        "description": "gs3.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "gs3.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "gs3.urls",
        "description": "gs3.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('studentapi/', views.student_api),\n]",
        "detail": "gs3.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "gs3.wsgi",
        "description": "gs3.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "gs3.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gs3.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    },
    {
        "label": "get_data",
        "kind": 2,
        "importPath": "myapp",
        "description": "myapp",
        "peekOfCode": "def get_data(id=None):\n    params = {}\n    if id is not None:\n        params = {'id': id}  # Use params for query parameters\n    # Correctly use params instead of data for GET requests\n    r = requests.get(url=URL, params=params)  # Pass params here\n    data = r.json()\n    print(data)\n# get_data()  # Fetch the student with id 1\ndef post_data():",
        "detail": "myapp",
        "documentation": {}
    },
    {
        "label": "post_data",
        "kind": 2,
        "importPath": "myapp",
        "description": "myapp",
        "peekOfCode": "def post_data():\n    data = {\n        'name':'abd',\n        'roll':104,\n        'city':'Dhaband'\n    }\n    json_data = json.dumps(data)\n    r = requests.post(url = URL, data   = json_data)\n    data = r.json()\n    print(data)",
        "detail": "myapp",
        "documentation": {}
    },
    {
        "label": "update_data",
        "kind": 2,
        "importPath": "myapp",
        "description": "myapp",
        "peekOfCode": "def update_data():\n    data = {\n        'id':2 ,\n        'name':'Muhammad  wazir',\n        'roll':1104,\n        'city':'new dehlianmmmmmmmmmmmmmmmd'\n    }\n    json_data = json.dumps(data)\n    r = requests.put(url = URL, data  = json_data)\n    data = r.json()",
        "detail": "myapp",
        "documentation": {}
    },
    {
        "label": "delete_data",
        "kind": 2,
        "importPath": "myapp",
        "description": "myapp",
        "peekOfCode": "def delete_data():\n    data = {\n        'id':7 \n    }\n    json_data = json.dumps(data)\n    r = requests.delete(url = URL, data  = json_data)\n    data = r.json()\n    print(data)\n# delete_data()",
        "detail": "myapp",
        "documentation": {}
    },
    {
        "label": "URL",
        "kind": 5,
        "importPath": "myapp",
        "description": "myapp",
        "peekOfCode": "URL = \"http://127.0.0.1:8000/studentapi/\"\ndef get_data(id=None):\n    params = {}\n    if id is not None:\n        params = {'id': id}  # Use params for query parameters\n    # Correctly use params instead of data for GET requests\n    r = requests.get(url=URL, params=params)  # Pass params here\n    data = r.json()\n    print(data)\n# get_data()  # Fetch the student with id 1",
        "detail": "myapp",
        "documentation": {}
    }
]